dtmc

// system states
const int STATE_INIT = 0;
const int STATE_IDLE = 1;
const int STATE_NORMAL = 2;
const int STATE_OVERLOADED = 3;
const int STATE_CRITIAL = 4;
const int STATE_FAILED = 5;

// default transition probabilities for each system state
const double DEFAULT_PROB_IDLE = 1.0/2;
const double DEFAULT_PROB_NORMAL = 1.0/5;
const double DEFAULT_PROB_OVERLOADED = 1.0/4;
const double DEFAULT_PROB_CRITICAL = 1.0/4;
const double DEFAULT_PROB_FAILED = 1.0/5;

module demo_system

	// state of the system
	s : [STATE_INIT..STATE_FAILED] init STATE_INIT;
	
	[] s=STATE_INIT -> (s'=STATE_IDLE);
	[] s=STATE_IDLE -> 
		DEFAULT_PROB_IDLE : (s'=STATE_IDLE) + 
		DEFAULT_PROB_IDLE : (s'=STATE_NORMAL);
	[] s=STATE_NORMAL -> 
		DEFAULT_PROB_NORMAL : (s'=STATE_IDLE) + 
		DEFAULT_PROB_NORMAL : (s'=STATE_NORMAL) +
		DEFAULT_PROB_NORMAL : (s'=STATE_OVERLOADED) +
		DEFAULT_PROB_NORMAL : (s'=STATE_FAILED) +
		DEFAULT_PROB_NORMAL : (s'=STATE_CRITIAL);
	[] s=STATE_OVERLOADED -> 
		DEFAULT_PROB_OVERLOADED : (s'=STATE_NORMAL) +
		DEFAULT_PROB_OVERLOADED : (s'=STATE_OVERLOADED) +
		DEFAULT_PROB_OVERLOADED : (s'=STATE_FAILED) +
		DEFAULT_PROB_OVERLOADED : (s'=STATE_CRITIAL);
	[] s=STATE_CRITIAL -> 
		DEFAULT_PROB_CRITICAL : (s'=STATE_NORMAL) +
		DEFAULT_PROB_CRITICAL : (s'=STATE_OVERLOADED) +
		DEFAULT_PROB_CRITICAL : (s'=STATE_FAILED) +
		DEFAULT_PROB_CRITICAL : (s'=STATE_CRITIAL);
	[] s=STATE_FAILED -> 
		DEFAULT_PROB_FAILED : (s'=STATE_IDLE) + 
		DEFAULT_PROB_FAILED : (s'=STATE_NORMAL) +
		DEFAULT_PROB_FAILED : (s'=STATE_OVERLOADED) +
		DEFAULT_PROB_FAILED : (s'=STATE_CRITIAL) +
		DEFAULT_PROB_FAILED : (s'=STATE_FAILED);

endmodule